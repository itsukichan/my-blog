---
import { Image } from 'astro:assets'

export interface Props {
title: string;
href: string;
updatedAt: string;
publishedAt: string;
keyVisual: {
url: string;
};
tags?: string[];
}

const { title, href, updatedAt, publishedAt, keyVisual, tags } = Astro.props;

const date = new Date(updatedAt);
const year = date.getFullYear();
const month = String(date.getMonth() + 1).padStart(2, '0');
const day = String(date.getDate()).padStart(2, '0');
const formattedDate = `${year}-${month}-${day}`;
---

<a href={href} class="grid grid-rows-subgrid gap-y-4 row-span-2">
  <div class="relative w-full">
    <Image class="aspect-[16/9] w-full rounded-2xl object-cover sm:aspect-[3/2]" src={keyVisual.url} width={272}
      height={181} alt={title} loading="eager" format="webp" />
  </div>
  <div class="max-w-xl">
    <div class="text-xs">
      <time datetime={publishedAt} class="text-background-dark dark:text-background-light">公開日: {formattedDate}</time>
      {
        updatedAt && (
          <time datetime={updatedAt} class="text-background-dark dark:text-background-light">更新日: {formattedDate}</time>
        )
      }
    </div>
    <div class="group relative">
      <h3 class="mt-3 text-lg font-semibold leading-6 text-background-dark dark:text-background-light">
        {title}
      </h3>
      {
      tags && (
      <ul class="flex gap-1 flex-wrap mt-2 text-xs">
        {
        tags.map((tag: string) => {
        return (
        <li
          class="text-background-dark dark:text-background-light border border-background-dark dark:border-background-light rounded-full px-2 py-1 ">
          {tag}
        </li>
        )
        }).sort()
        }
      </ul>
      )
      }
    </div>
  </div>
</a>
