---
import ThemeToggleButton from "@components/ThemeToggleButton.astro";
import SiteLogo from "@components/SiteLogo.astro";
import HamburgerButton from "@components/HamburgerButton.astro";
import NavigationLinks from "@components/NavigationLinks.astro";

const sectionsData = [
  {
    title: "Works",
    link: "/portfolios",
  },
  {
    title: "TechLog",
    link: "https://techlogwalk.vercel.app",
  },
  {
    title: "Source",
    link: "https://github.com/itsukichan/techpanda",
    blank: true,
    icon: "github",
  },
];
---

<header class="sticky top-0 z-30 w-full bg-opacity-25 backdrop-blur-lg rounded-lg shadow-lg">
  <nav class="mx-auto flex max-w-2xl items-center justify-between p-6 sm:px-8" aria-label="Global">
    <div class="-m-1.5 p-1.5">
      <SiteLogo />
    </div>
    <ThemeToggleButton />
    <HamburgerButton />
    <NavigationLinks sections={sectionsData} />
  </nav>
</header>

<!-- モバイルメニュー -->
<div
  id="mobile-menu"
  class="sm:hidden fixed inset-0 z-50 bg-background-light dark:bg-background-dark transform transition-transform duration-300 ease-in-out translate-x-full"
>
  <div class="h-full w-full px-6 py-6">
    <div class="flex items-center justify-between">
      <div class="-m-1.5 p-1.5">
        <SiteLogo />
      </div>
      <button
        id="close-menu"
        type="button"
        class="-m-2.5 rounded-md p-2.5 text-background-dark dark:text-background-light"
      >
        <span class="sr-only">メニューを閉じる</span>
        <svg
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
        >
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <div class="mt-6 flow-root">
      <div class="-my-6 divide-y divide-gray-500/10">
        <div class="space-y-2 py-6">
          {
            sectionsData.map((data) => (
              <a
                href={data.link}
                class="-mx-3 flex items-center gap-1 rounded-lg px-3 py-2 text-base font-semibold leading-7 text-background-dark dark:text-background-light"
                target={data.blank ? "_blank" : ""}
                rel={data.blank ? "noopener noreferrer" : ""}
              >
                {data.icon && (
                  <svg
                    class="h-6 w-6"
                    fill="currentColor"
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"
                      clip-rule="evenodd"
                    />
                  </svg>
                )}
                {data.title}
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function setupMobileMenu() {
    const openMenuButton = document.getElementById("open-menu");
    const closeMenuButton = document.getElementById("close-menu");
    const mobileMenu = document.getElementById("mobile-menu");
    const html = document.documentElement;

    if (!openMenuButton || !closeMenuButton || !mobileMenu) return;

    function toggleMenu(isOpen: boolean) {
      mobileMenu.classList.toggle("translate-x-full", !isOpen);
      mobileMenu.classList.toggle("translate-x-0", isOpen);

      if (isOpen) {
        html.style.overflow = 'hidden';
      } else {
        html.style.overflow = '';
      }
    }

    openMenuButton.addEventListener("click", () => toggleMenu(true));
    closeMenuButton.addEventListener("click", () => toggleMenu(false));

    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") toggleMenu(false);
    });

    toggleMenu(false);
  }

  setupMobileMenu();
  document.addEventListener("astro:after-swap", setupMobileMenu);
</script>
